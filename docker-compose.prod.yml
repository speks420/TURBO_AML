# TURBO_AML Production Environment
# Optimized for deployment with Supabase integration

version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: turbo_aml_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - turbo_aml_network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: turbo_aml_backend_prod
    expose:
      - "8000"
    environment:
      - DEBUG=False
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - CKAN_BASE_URL=https://data.gov.lv/dati/lv/
      - CKAN_COMPANY_RESOURCE_ID=${CKAN_COMPANY_RESOURCE_ID}
      - CKAN_CAPITAL_RESOURCE_ID=${CKAN_CAPITAL_RESOURCE_ID}
      - CKAN_BENEFICIARY_RESOURCE_ID=${CKAN_BENEFICIARY_RESOURCE_ID}
      - CKAN_MEMBERS_RESOURCE_ID=${CKAN_MEMBERS_RESOURCE_ID}
      - CKAN_BUSINESS_RESOURCE_ID=${CKAN_BUSINESS_RESOURCE_ID}
      - CKAN_LIQUIDATION_RESOURCE_ID=${CKAN_LIQUIDATION_RESOURCE_ID}
      - CKAN_OFFICERS_RESOURCE_ID=${CKAN_OFFICERS_RESOURCE_ID}
      - CKAN_STOCKHOLDERS_RESOURCE_ID=${CKAN_STOCKHOLDERS_RESOURCE_ID}
      - FINANCIAL_HEALTH_ALGORITHM_VERSION=v2.1
      - RISK_ASSESSMENT_MODEL=enhanced_2024
      - ENABLE_PREDICTIVE_ANALYTICS=true
      - REDIS_URL=redis://redis:6379
    volumes:
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - turbo_aml_network

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: turbo_aml_frontend_prod
    expose:
      - "80"
    environment:
      - VITE_API_URL=${FRONTEND_API_URL:-/api}
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - VITE_ENABLE_ADVANCED_CHARTS=true
      - VITE_ENABLE_EXPORT_FEATURES=true
      - VITE_ENABLE_REAL_TIME_UPDATES=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - turbo_aml_network

  # Redis cache service
  redis:
    image: redis:7-alpine
    container_name: turbo_aml_redis_prod
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - turbo_aml_network

volumes:
  backend_logs:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local

networks:
  turbo_aml_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 